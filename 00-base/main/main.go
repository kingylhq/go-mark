package main

import (
	"fmt"
	"go-mark/00-base/main/example"
)

func main() {

	fmt.Println("*********")

	//example.HelloWorld()
	//example.Values()
	//example.Variables()
	//example.Constants()
	//example.For()
	//example.IfElse()
	//example.Switch()
	//example.Arrays()
	//example.Slices()
	//example.Maps()
	//example.Function()
	//example.VariadicFunctions()
	//example.Closures()
	//example.RangeOver()
	//example.Pointers()
	//example.StringsRunes()
	//example.Structs()
	//example.Methods()
	//example.Interfaces()
	//example.Enums()
	//example.StructEmbedding()
	//example.Generics()
	//example.RangeOverIterators()
	//example.Errors()
	//example.CustomError()
	//example.Goroutines()

	//example.Channels()
	//example.ChannelBuffering()
	//example.ChannelSynchronization()
	//example.ChannelDirections()
	//example.Select()
	//example.Timeouts()
	//example.ClosingChannels()
	//example.RangeOverChannels()
	//example.Timers()
	//example.Tickers()
	//example.WorkerPools()
	//example.WaitGroup()
	//example.RateLimiting()
	//example.AtomicCounters()
	//example.Mutexes()
	//example.StatefulGoroutines()
	//example.Sorting()

	//example.SortingByFunctions()
	//example.Panic()
	//example.Defer()
	//example.Recover()
	//example.StringFunctions()
	//example.StringFormatting()
	//example.TextTemplates()

	//example.RegularExpressions()
	//example.Json()
	//example.XML()
	//example.Time()dfg

	//example.Epoch()
	//example.TimeFormattingParsing()
	//example.RandomNumbers()
	//example.NumberParsing()
	//example.UrlParsing()
	//example.SHA256Hashes()
	//example.Base64Encoding()
	//example.ReadingFiles()
	//example.WritingFiles()
	//example.LineFilters()
	//example.FilePaths()
	//example.TemporaryFilesDirectories()
	//example.EmbedDirective()
	//example.TestIntMinTableDriven()
	//example.CommandLineArguments()
	//example.CommandLineFlags()
	//example.CommandLineSubcommands()
	//example.EnvironmentVariables()
	//example.Logging()
	//example.HTTPClient()
	//example.HTTPServer()
	//example.Context()

	//example.SpawningProcesses()
	//example.ExecingProcesses()
	//example.Signals()
	example.Exit()

}
